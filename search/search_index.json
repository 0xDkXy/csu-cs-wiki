{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"CSU CS Wiki \u00b6 \u672c\u9879\u76ee Wiki \u90e8\u5206\u76ee\u7684\u5728\u4e8e\u5e2e\u52a9\u540c\u5b66\u4eec\u66f4\u597d\u5730\u7406\u89e3\u6216\u590d\u4e60\u8bfe\u7a0b\u7684 \u6838\u5fc3\u77e5\u8bc6\u70b9 \uff0c\u4ee5\u53ca\u7ade\u8d5b\u76f8\u5173\u5185\u5bb9\u3002 \u672c\u9879\u76ee\u53d7 OI Wiki \u7684\u542f\u53d1\uff0c\u5728\u7f16\u5199\u8fc7\u7a0b\u4e2d\u53c2\u8003\u4e86\u5176\u8d44\u6599\uff0c\u5728\u6b64\u81f4\u8c22\u3002 \u9879\u76ee\u76ee\u524d\u5728\u8d77\u6b65\u9636\u6bb5\uff0c\u53c2\u4e0e\u4eba\u6570\u8f83\u5c11\uff0c\u671f\u5f85\u4f60\u7684\u52a0\u5165\u3002 Material color palette \u989c\u8272\u4e3b\u9898 \u00b6 Primary colors \u4e3b\u8272 \u00b6 \u9ed8\u8ba4\u4e3a white \u70b9\u51fb\u8272\u5757\u53ef\u66f4\u6362\u4e3b\u9898\u7684\u4e3b\u8272 Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange Brown Grey Blue Grey White var buttons = document.querySelectorAll(\"button[data-md-color-primary]\"); Array.prototype.forEach.call(buttons, function(button) { button.addEventListener(\"click\", function() { document.body.dataset.mdColorPrimary = this.dataset.mdColorPrimary; localStorage.setItem(\"data-md-color-primary\",this.dataset.mdColorPrimary); }) }) Accent colors \u8f85\u52a9\u8272 \u00b6 \u9ed8\u8ba4\u4e3a red \u70b9\u51fb\u8272\u5757\u66f4\u6362\u4e3b\u9898\u7684\u8f85\u52a9\u8272 Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange var buttons = document.querySelectorAll(\"button[data-md-color-accent]\"); Array.prototype.forEach.call(buttons, function(button) { button.addEventListener(\"click\", function() { document.body.dataset.mdColorAccent = this.dataset.mdColorAccent; localStorage.setItem(\"data-md-color-accent\",this.dataset.mdColorAccent); }) }) // #758 document.getElementsByClassName('md-nav__title')[1].click()","title":"Getting Started"},{"location":"#csu-cs-wiki","text":"\u672c\u9879\u76ee Wiki \u90e8\u5206\u76ee\u7684\u5728\u4e8e\u5e2e\u52a9\u540c\u5b66\u4eec\u66f4\u597d\u5730\u7406\u89e3\u6216\u590d\u4e60\u8bfe\u7a0b\u7684 \u6838\u5fc3\u77e5\u8bc6\u70b9 \uff0c\u4ee5\u53ca\u7ade\u8d5b\u76f8\u5173\u5185\u5bb9\u3002 \u672c\u9879\u76ee\u53d7 OI Wiki \u7684\u542f\u53d1\uff0c\u5728\u7f16\u5199\u8fc7\u7a0b\u4e2d\u53c2\u8003\u4e86\u5176\u8d44\u6599\uff0c\u5728\u6b64\u81f4\u8c22\u3002 \u9879\u76ee\u76ee\u524d\u5728\u8d77\u6b65\u9636\u6bb5\uff0c\u53c2\u4e0e\u4eba\u6570\u8f83\u5c11\uff0c\u671f\u5f85\u4f60\u7684\u52a0\u5165\u3002","title":"CSU CS Wiki"},{"location":"#material-color-palette","text":"","title":"Material color palette \u989c\u8272\u4e3b\u9898"},{"location":"#primary-colors","text":"\u9ed8\u8ba4\u4e3a white \u70b9\u51fb\u8272\u5757\u53ef\u66f4\u6362\u4e3b\u9898\u7684\u4e3b\u8272 Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange Brown Grey Blue Grey White var buttons = document.querySelectorAll(\"button[data-md-color-primary]\"); Array.prototype.forEach.call(buttons, function(button) { button.addEventListener(\"click\", function() { document.body.dataset.mdColorPrimary = this.dataset.mdColorPrimary; localStorage.setItem(\"data-md-color-primary\",this.dataset.mdColorPrimary); }) })","title":"Primary colors \u4e3b\u8272"},{"location":"#accent-colors","text":"\u9ed8\u8ba4\u4e3a red \u70b9\u51fb\u8272\u5757\u66f4\u6362\u4e3b\u9898\u7684\u8f85\u52a9\u8272 Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange var buttons = document.querySelectorAll(\"button[data-md-color-accent]\"); Array.prototype.forEach.call(buttons, function(button) { button.addEventListener(\"click\", function() { document.body.dataset.mdColorAccent = this.dataset.mdColorAccent; localStorage.setItem(\"data-md-color-accent\",this.dataset.mdColorAccent); }) }) // #758 document.getElementsByClassName('md-nav__title')[1].click()","title":"Accent colors \u8f85\u52a9\u8272"},{"location":"edit-landing/","text":"\u7f16\u8f91\u524d\u987b\u77e5 \u00b6 \u9996\u5148\uff0c\u611f\u8c22\u60a8\u80fd\u591f\u4e3a CSU CS Wiki \u505a\u51fa\u81ea\u5df1\u7684\u8d21\u732e\u3002 \u4e0d\u8fc7\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u60a8\u4e86\u89e3\u5e76\u719f\u77e5 \u5982\u4f55\u53c2\u4e0e \u91cc\u7684\u5185\u5bb9\uff0c\u4ee5\u907f\u514d\u5728\u7f16\u8f91\u65f6\u4ea7\u751f\u4e0d\u5fc5\u8981\u7684\u9ebb\u70e6\u3002 \u5728\u9605\u8bfb\u5b8c\u4e4b\u540e\uff0c\u8bf7\u70b9\u51fb\u4e0b\u65b9\u7684\u6309\u94ae\uff0c\u7136\u540e\u5f00\u59cb\u7f16\u8f91\u3002 \u5f00\u59cb\u7f16\u8f91 function getQueryVariable(name, dft) { var reg = new RegExp('(^|&)' + name + '=([^&]*)(&|$)', 'i'); var r = window.location.search.substr(1).match(reg); if (r != null) { return unescape(r[2]); } return dft; } document.getElementById(\"btn-startedit\").href = \"https://github.com/leo6033/CSU_CS_Experiment/edit/master/docs\" + getQueryVariable(\"ref\", \"\");","title":"\u7f16\u8f91\u524d\u987b\u77e5"},{"location":"edit-landing/#_1","text":"\u9996\u5148\uff0c\u611f\u8c22\u60a8\u80fd\u591f\u4e3a CSU CS Wiki \u505a\u51fa\u81ea\u5df1\u7684\u8d21\u732e\u3002 \u4e0d\u8fc7\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u60a8\u4e86\u89e3\u5e76\u719f\u77e5 \u5982\u4f55\u53c2\u4e0e \u91cc\u7684\u5185\u5bb9\uff0c\u4ee5\u907f\u514d\u5728\u7f16\u8f91\u65f6\u4ea7\u751f\u4e0d\u5fc5\u8981\u7684\u9ebb\u70e6\u3002 \u5728\u9605\u8bfb\u5b8c\u4e4b\u540e\uff0c\u8bf7\u70b9\u51fb\u4e0b\u65b9\u7684\u6309\u94ae\uff0c\u7136\u540e\u5f00\u59cb\u7f16\u8f91\u3002 \u5f00\u59cb\u7f16\u8f91 function getQueryVariable(name, dft) { var reg = new RegExp('(^|&)' + name + '=([^&]*)(&|$)', 'i'); var r = window.location.search.substr(1).match(reg); if (r != null) { return unescape(r[2]); } return dft; } document.getElementById(\"btn-startedit\").href = \"https://github.com/leo6033/CSU_CS_Experiment/edit/master/docs\" + getQueryVariable(\"ref\", \"\");","title":"\u7f16\u8f91\u524d\u987b\u77e5"},{"location":"imageprocess/ilpf/","text":"\u7406\u60f3\u6ee4\u6ce2\u5668 \u00b6 \u9891\u7387\u57df\u5e73\u6ed1\u9510\u5316\u5e38\u7528\u7684\u51e0\u4e2a\u6ee4\u6ce2\u5668\u7684\u6570\u5b66\u8868\u8fbe\u548c\u5b9e\u73b0\u90fd\u5df2\u7ecf\u5728 \u6570\u5b57\u56fe\u50cf\u5904\u7406\u2014\u2014\u9891\u7387\u57df\u5e73\u6ed1\u9510\u5316\u56fe\u50cf\u5e38\u7528\u6ee4\u6ce2\u5668 \u4e00\u6587\u4e2d\u5b9e\u73b0\u3002 \u4e4b\u524d\u6211\u4eec\u8ba8\u8bba\u5230\u4e86\u632f\u94c3\u73b0\u8c61\uff0c\u672c\u6587\u4e2d\u7684\u5b9e\u9a8c\u4e3b\u8981\u662f\u52a8\u624b\u5b9e\u73b0\u6d4b\u8bd5\u4e86 ILPF \u5bf9\u56fe\u7247\u7684\u6a21\u7cca\u6548\u679c\u53ca\u5176\u632f\u94c3\u73b0\u8c61\uff0c\u5e76\u4e14\u8ddf\u968f\u8bfe\u672c\u5c1d\u8bd5\u89e3\u91ca ILPF \u5728\u7a7a\u95f4\u57df\u7684\u632f\u94c3\u7279\u6027\u3002 \u7406\u60f3\u4f4e\u901a\u6ee4\u6ce2\u5668 ILPF \u00b6 \u63cf\u8ff0\u5982\u4e0b H_{ILPF}(u,v) = \\left \\{ \\begin{aligned} 1, & D(u,v) \\le D_0 \\\\ 0, & D(u,b) > D_0 \\end{aligned} \\right. H_{ILPF}(u,v) = \\left \\{ \\begin{aligned} 1, & D(u,v) \\le D_0 \\\\ 0, & D(u,b) > D_0 \\end{aligned} \\right. \u5176\u4e2d D_0 D_0 \u662f\u4e00\u4e2a\u6b63\u5e38\u6570\uff0c D(u,v) D(u,v) \u8868\u793a\u9891\u7387\u57df\u4e2d\u7684\u70b9 (u,v) (u,v) \u8ddd\u79bb\u9891\u7387\u57df\u4e2d\u5fc3 (\\frac{P}{2},\\frac{Q}{2}) (\\frac{P}{2},\\frac{Q}{2}) \u7684\u8ddd\u79bb\u3002 \u7406\u60f3\u9ad8\u901a\u6ee4\u6ce2\u5668 IHPF \u00b6 \u63cf\u8ff0\u5982\u4e0b H_{IHPF}(u,v) = \\left \\{ \\begin{aligned} 0, & D(u,v) \\le D_0 \\\\ 1, & D(u,b) > D_0 \\end{aligned} \\right. H_{IHPF}(u,v) = \\left \\{ \\begin{aligned} 0, & D(u,v) \\le D_0 \\\\ 1, & D(u,b) > D_0 \\end{aligned} \\right. \u4ee3\u7801\u5b9e\u73b0 \u00b6 \u4ee3\u7801\u5b9e\u73b0 getIdealMask() \u4e5f\u5728 \u6570\u5b57\u56fe\u50cf\u5904\u7406\u2014\u2014\u9891\u7387\u57df\u5e73\u6ed1\u9510\u5316\u56fe\u50cf\u5e38\u7528\u6ee4\u6ce2\u5668 \u7ed9\u51fa\uff0c\u5728\u6b64\u4e0d\u518d\u8f6c\u8ff0\u3002 \u4e24\u7ec4\u6d4b\u8bd5\u5747\u4e3a 100x100 \u5927\u5c0f\uff0c\u622a\u81f3\u534a\u5f84\u4e3a 20 \u7684\u4f4e\u901a\u548c\u9ad8\u901a\u6ee4\u6ce2\u5668\u5b9e\u9a8c\u7ed3\u679c\u3002 \u4f7f\u7528\u4e00\u4e2a ILPF \u5e73\u6ed1\u56fe\u50cf \u00b6 def getIdealFilterPassImg ( input_img : np . array , filter_type : str , filter_d0 , size = None ): assert filter_type in ( \"lpf\" , \"hpf\" ) # \u5185\u90e8\u8fdb\u884c\u586b\u5145 \uff08mask\u5927\u5c0f\u4e0e\u539f\u56fe\u76f8\u7b49 \u8fdb\u884c2K-1\u76840\u586b\u5145\uff09 pad_img = getPaddingImg ( input_img , input_img . shape , \"corner\" ) f_img = np . fft . fft2 ( input_img , s = size ) shift_img = np . fft . fftshift ( f_img ) mask_shift_img = getIdealMask ( f_img . shape , filter_d0 , filter_type ) new_shift_img = mask_shift_img * shift_img new_manitude_img = 20 * np . log ( np . abs ( new_shift_img + eps )) new_f_img = np . fft . ifftshift ( new_shift_img ) new_img = np . fft . ifft2 ( new_f_img ) new_img = np . abs ( new_img ) # \u5185\u90e8\u8fdb\u884c\u88c1\u526a new_img = cutOriginalImg ( new_img , input_img . shape , \"corner\" ) return new_img , new_manitude_img , mask_shift_img # \u4f7f\u7528\u4e66\u4e0a\u4f8b\u5b50\uff0ccv\u5e93\u8bfb\u53d6\u56fe\u50cf original_img = cv2 . imread ( './DIP3E_Original_Images_CH04/Fig0441(a)(characters_test_pattern).tif' , 0 ) # \u8bbe\u5b9a\u622a\u6b62\u534a\u5f84 d_list = [ 10 , 30 , 60 , 160 , 460 ] for d in d_list : smmoth_img , manitude_img , mask_img = getIdealFilterPassImg ( original_img , \"lpf\" , d ) showTwoImg ( smmoth_img , manitude_img , f \"Smooth Img with $D_0$ = { d } \" , f \"Manitude with $D_0$ = { d } \" ) \u632f\u94c3\u73b0\u8c61 \u00b6 \u7531\u4e0a\u56fe\u53ef\u4ee5\u770b\u51fa\u968f\u7740\u9608\u503c\u589e\u5927\uff0c\u9891\u8c31\u4e2d\u4fdd\u7559\u529f\u7387\u7684\u589e\u5927\uff0c\u56fe\u50cf\u7ec6\u8282\u9010\u6e10\u660e\u6670\uff0c\u6a21\u7cca\u6548\u679c\u8d8a\u6765\u8d8a\u5dee\u3002\u8fd9\u8bf4\u660e\u6211\u4eec\u7684\u6ee4\u6ce2\u5668\u662f\u6210\u529f\u7684\uff08\u4e0d\u8fc7\u8fd9\u91cc\u4e0e\u8bfe\u672c P171 \u56fe\u6bd4\u8f83\u4f1a\u6e05\u6670\u4e00\u4e9b\uff0c\u4e0d\u6e05\u695a\u539f\u56e0\uff09 \u53e6\u5916\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5f88\u660e\u663e\u7684\u53d1\u73b0 \u632f\u94c3\u73b0\u8c61 \uff0c\u95f4\u9699\u5904\u539f\u672c\u7edf\u4e00\u7684\u7eb9\u7406\u7531\u4e8e\u6a21\u7cca\u53d8\u5f97\u6709\u660e\u6697\u8d77\u4f0f\u3002\u800c\u968f\u7740\u88ab\u6ee4\u53bb\u7684\u9ad8\u9891\u5185\u5bb9\u7684\u6570\u91cf\u7684\u51cf\u5c11\uff0c\u56fe\u50cf\u7684\u7eb9\u7406\u53d8\u5f97\u8d8a\u6765\u8d8a\u597d\uff0c\u751a\u81f3\u6211\u4eec\u4ed4\u7ec6\u770b\u7b2c\u4e09\u5e45\u56fe\uff0c\u4e5f\u80fd\u53d1\u73b0\u632f\u94c3\u73b0\u8c61\u7684\u7eb9\u7406\uff0c\u8bfe\u672c\u662f\u8fd9\u4e48\u8bc4\u4ef7\u632f\u94c3\u73b0\u8c61\u548c ILPF \u7684\u3002 \u8fd9\u79cd\u632f\u94c3\u73b0\u8c61\u662f\u7406\u60f3\u6ee4\u6ce2\u5668\u7684\u4e00\u79cd\u7279\u6027\uff0c\u4ece\u8fd9\u4e2a\u4f8b\u5b50\u6211\u4eec\u53ef\u4ee5\u6e05\u695a\u5730\u770b\u5230\uff0c\u7406\u60f3\u4f4e\u901a\u6ee4\u6ce2\u5668\u5e76\u4e0d\u662f\u975e\u5e38\u5b9e\u7528\u3002\u7136\u800c\uff0c\u4f5c\u4e3a\u6ee4\u6ce2\u6982\u5ff5\u53d1\u5c55\u7684\u4e00\u90e8\u5206\uff0c\u7814\u7a76\u8fd9\u79cd\u6ee4\u6ce2\u5668\u7684\u7279\u6027\u975e\u5e38\u6709\u7528\u3002 \u632f\u94c3\u73b0\u8c61\u7684\u4e00\u4e9b\u89c1\u89e3 \u00b6 # \u7ed8\u5236\u7a7a\u95f4\u57df\u8868\u793a\u56fe\u548c\u6c34\u5e73\u7ebf\u7070\u5ea6\u5256\u9762\u56fe for d in d_list : fre_mask = getIdealMask (( 688 , 688 ), d , \"lpf\" ) spa_mask = frequencyToSpatial ( fre_mask ) X = [ i for i in range ( spa_mask . shape [ 0 ])] Y = spa_mask [ spa_mask . shape [ 0 ] // 2 ] plt . figure ( figsize = ( 8 , 4 )) ax1 = plt . subplot ( 121 ) ax2 = plt . subplot ( 122 ) ax1 . set_title ( f \"Spatial Img with $D_0 = { d } $\" ) ax2 . set_title ( f \"Grayscale with $D_0 = { d } $\" ) ax1 . imshow ( spa_mask , cmap = \"gray\" ) ax2 . plot ( X , Y ) ax2 . spines [ 'left' ] . set_color ( 'none' ) ax2 . spines [ 'top' ] . set_color ( 'none' ) ax2 . spines [ 'right' ] . set_color ( 'none' ) ax2 . set_yticks ([]) ax2 . set_yticklabels ([]) \u5206\u522b\u5bf9\u5e94\u4e86\u4e0a\u9762\u7684\u9608\u503c\uff0c\u89c2\u5bdf\u5176\u6ee4\u6ce2\u5668\u7684\u7a7a\u95f4\u4e0e\u8868\u793a\uff0c\u5728 D_0 D_0 \u8f83\u5c0f\u7684\u65f6\u5019\u6709\u5f88\u660e\u663e\u7684\u6ce2\u52a8\u51fd\u6570\u5f62\u72b6\u3002 ILPF \u7684\u6a21\u7cca\u548c\u632f\u94c3\u7279\u6027\u53ef\u7528\u5377\u79ef\u5b9a\u7406\u6765\u89e3\u91ca\u3002\u7531\u4e8e ILPF \u5728\u9891\u7387\u57df\u7684\u5256\u9762\u56fe\u7c7b\u4f3c\u4e8e\u76d2\u72b6\u6ee4\u6ce2\u5668\uff0c\u56e0\u6b64\u53ef\u4ee5\u9884\u6599\u76f8\u5e94\u7a7a\u95f4\u6ee4\u6ce2\u5668\u5177\u6709 sinc \u51fd\u6570\u5f62\u72b6\u3002\u7a7a\u95f4\u57df\u6ee4\u6ce2\u53ef\u901a\u8fc7 h(x,y) h(x,y) \u4e8e\u56fe\u50cf\u5377\u79ef\u6765\u5b9e\u73b0\u3002\u8bb2\u56fe\u50cf\u4e2d\u7684\u6bcf\u4e2a\u50cf\u7d20\u60f3\u8c61\u4e3a\u4e00\u4e2a\u79bb\u6563\u51b2\u51fb\uff0c\u5b83\u7684\u5f3a\u5ea6\u4e0e\u6240\u5728\u4f4d\u7f6e\u7684\u7070\u5ea6\u6210\u6b63\u6bd4\u3002\u4e00\u4e2a sinc \u51fd\u6570\u4e0e\u4e00\u4e2a\u51b2\u6fc0\u5377\u79ef\u5c31\u662f\u5728\u51b2\u6fc0\u5904\u590d\u5236\u8fd9\u4e2a sinc \u51fd\u6570\u3002 sinc \u51fd\u6570\u7684\u4e2d\u5fc3\u6ce2\u74e3\u662f\u5f15\u8d77\u6a21\u7cca\u7684\u4e3b\u56e0\uff0c\u800c\u5916\u4fa7\u8f83\u5c0f\u7684\u6ce2\u74e3\u662f\u9020\u6210\u632f\u94c3\u7684\u4e3b\u8981\u539f\u56e0\u3002sinc \u51fd\u6570\u201c\u5c55\u5f00\u5ea6\u201d\u4e0e H(u,v) H(u,v) \u534a\u5f84\u6210\u53cd\u6bd4\uff0c\u6240\u4ee5 D_0 D_0 \u8d8a\u5927\uff0c\u7a7a\u95f4 sinc \u51fd\u6570\u5c31\u8d8b\u8fd1\u4e8e\u4e00\u4e2a\u5377\u79ef\u65f6\u4e0d\u4f1a\u5bfc\u81f4\u6a21\u7cca\u4f46\u4e5f\u4e0d\u4f1a\u4ea7\u751f\u632f\u94c3\u7684\u51b2\u6fc0 \u642c\u8fd0 DJ \u7684\u5bc6\u7801\u5b66\u89c6\u9891\u6765\u505a\u6d4b\u8bd5","title":"\u7406\u60f3\u6ee4\u6ce2\u5668\u4e0e\u632f\u94c3\u7279\u6027"},{"location":"imageprocess/ilpf/#_1","text":"\u9891\u7387\u57df\u5e73\u6ed1\u9510\u5316\u5e38\u7528\u7684\u51e0\u4e2a\u6ee4\u6ce2\u5668\u7684\u6570\u5b66\u8868\u8fbe\u548c\u5b9e\u73b0\u90fd\u5df2\u7ecf\u5728 \u6570\u5b57\u56fe\u50cf\u5904\u7406\u2014\u2014\u9891\u7387\u57df\u5e73\u6ed1\u9510\u5316\u56fe\u50cf\u5e38\u7528\u6ee4\u6ce2\u5668 \u4e00\u6587\u4e2d\u5b9e\u73b0\u3002 \u4e4b\u524d\u6211\u4eec\u8ba8\u8bba\u5230\u4e86\u632f\u94c3\u73b0\u8c61\uff0c\u672c\u6587\u4e2d\u7684\u5b9e\u9a8c\u4e3b\u8981\u662f\u52a8\u624b\u5b9e\u73b0\u6d4b\u8bd5\u4e86 ILPF \u5bf9\u56fe\u7247\u7684\u6a21\u7cca\u6548\u679c\u53ca\u5176\u632f\u94c3\u73b0\u8c61\uff0c\u5e76\u4e14\u8ddf\u968f\u8bfe\u672c\u5c1d\u8bd5\u89e3\u91ca ILPF \u5728\u7a7a\u95f4\u57df\u7684\u632f\u94c3\u7279\u6027\u3002","title":"\u7406\u60f3\u6ee4\u6ce2\u5668"},{"location":"imageprocess/ilpf/#ilpf","text":"\u63cf\u8ff0\u5982\u4e0b H_{ILPF}(u,v) = \\left \\{ \\begin{aligned} 1, & D(u,v) \\le D_0 \\\\ 0, & D(u,b) > D_0 \\end{aligned} \\right. H_{ILPF}(u,v) = \\left \\{ \\begin{aligned} 1, & D(u,v) \\le D_0 \\\\ 0, & D(u,b) > D_0 \\end{aligned} \\right. \u5176\u4e2d D_0 D_0 \u662f\u4e00\u4e2a\u6b63\u5e38\u6570\uff0c D(u,v) D(u,v) \u8868\u793a\u9891\u7387\u57df\u4e2d\u7684\u70b9 (u,v) (u,v) \u8ddd\u79bb\u9891\u7387\u57df\u4e2d\u5fc3 (\\frac{P}{2},\\frac{Q}{2}) (\\frac{P}{2},\\frac{Q}{2}) \u7684\u8ddd\u79bb\u3002","title":"\u7406\u60f3\u4f4e\u901a\u6ee4\u6ce2\u5668 ILPF"},{"location":"imageprocess/ilpf/#ihpf","text":"\u63cf\u8ff0\u5982\u4e0b H_{IHPF}(u,v) = \\left \\{ \\begin{aligned} 0, & D(u,v) \\le D_0 \\\\ 1, & D(u,b) > D_0 \\end{aligned} \\right. H_{IHPF}(u,v) = \\left \\{ \\begin{aligned} 0, & D(u,v) \\le D_0 \\\\ 1, & D(u,b) > D_0 \\end{aligned} \\right.","title":"\u7406\u60f3\u9ad8\u901a\u6ee4\u6ce2\u5668 IHPF"},{"location":"imageprocess/ilpf/#_2","text":"\u4ee3\u7801\u5b9e\u73b0 getIdealMask() \u4e5f\u5728 \u6570\u5b57\u56fe\u50cf\u5904\u7406\u2014\u2014\u9891\u7387\u57df\u5e73\u6ed1\u9510\u5316\u56fe\u50cf\u5e38\u7528\u6ee4\u6ce2\u5668 \u7ed9\u51fa\uff0c\u5728\u6b64\u4e0d\u518d\u8f6c\u8ff0\u3002 \u4e24\u7ec4\u6d4b\u8bd5\u5747\u4e3a 100x100 \u5927\u5c0f\uff0c\u622a\u81f3\u534a\u5f84\u4e3a 20 \u7684\u4f4e\u901a\u548c\u9ad8\u901a\u6ee4\u6ce2\u5668\u5b9e\u9a8c\u7ed3\u679c\u3002","title":"\u4ee3\u7801\u5b9e\u73b0"},{"location":"imageprocess/ilpf/#ilpf_1","text":"def getIdealFilterPassImg ( input_img : np . array , filter_type : str , filter_d0 , size = None ): assert filter_type in ( \"lpf\" , \"hpf\" ) # \u5185\u90e8\u8fdb\u884c\u586b\u5145 \uff08mask\u5927\u5c0f\u4e0e\u539f\u56fe\u76f8\u7b49 \u8fdb\u884c2K-1\u76840\u586b\u5145\uff09 pad_img = getPaddingImg ( input_img , input_img . shape , \"corner\" ) f_img = np . fft . fft2 ( input_img , s = size ) shift_img = np . fft . fftshift ( f_img ) mask_shift_img = getIdealMask ( f_img . shape , filter_d0 , filter_type ) new_shift_img = mask_shift_img * shift_img new_manitude_img = 20 * np . log ( np . abs ( new_shift_img + eps )) new_f_img = np . fft . ifftshift ( new_shift_img ) new_img = np . fft . ifft2 ( new_f_img ) new_img = np . abs ( new_img ) # \u5185\u90e8\u8fdb\u884c\u88c1\u526a new_img = cutOriginalImg ( new_img , input_img . shape , \"corner\" ) return new_img , new_manitude_img , mask_shift_img # \u4f7f\u7528\u4e66\u4e0a\u4f8b\u5b50\uff0ccv\u5e93\u8bfb\u53d6\u56fe\u50cf original_img = cv2 . imread ( './DIP3E_Original_Images_CH04/Fig0441(a)(characters_test_pattern).tif' , 0 ) # \u8bbe\u5b9a\u622a\u6b62\u534a\u5f84 d_list = [ 10 , 30 , 60 , 160 , 460 ] for d in d_list : smmoth_img , manitude_img , mask_img = getIdealFilterPassImg ( original_img , \"lpf\" , d ) showTwoImg ( smmoth_img , manitude_img , f \"Smooth Img with $D_0$ = { d } \" , f \"Manitude with $D_0$ = { d } \" )","title":"\u4f7f\u7528\u4e00\u4e2a ILPF \u5e73\u6ed1\u56fe\u50cf"},{"location":"imageprocess/ilpf/#_3","text":"\u7531\u4e0a\u56fe\u53ef\u4ee5\u770b\u51fa\u968f\u7740\u9608\u503c\u589e\u5927\uff0c\u9891\u8c31\u4e2d\u4fdd\u7559\u529f\u7387\u7684\u589e\u5927\uff0c\u56fe\u50cf\u7ec6\u8282\u9010\u6e10\u660e\u6670\uff0c\u6a21\u7cca\u6548\u679c\u8d8a\u6765\u8d8a\u5dee\u3002\u8fd9\u8bf4\u660e\u6211\u4eec\u7684\u6ee4\u6ce2\u5668\u662f\u6210\u529f\u7684\uff08\u4e0d\u8fc7\u8fd9\u91cc\u4e0e\u8bfe\u672c P171 \u56fe\u6bd4\u8f83\u4f1a\u6e05\u6670\u4e00\u4e9b\uff0c\u4e0d\u6e05\u695a\u539f\u56e0\uff09 \u53e6\u5916\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5f88\u660e\u663e\u7684\u53d1\u73b0 \u632f\u94c3\u73b0\u8c61 \uff0c\u95f4\u9699\u5904\u539f\u672c\u7edf\u4e00\u7684\u7eb9\u7406\u7531\u4e8e\u6a21\u7cca\u53d8\u5f97\u6709\u660e\u6697\u8d77\u4f0f\u3002\u800c\u968f\u7740\u88ab\u6ee4\u53bb\u7684\u9ad8\u9891\u5185\u5bb9\u7684\u6570\u91cf\u7684\u51cf\u5c11\uff0c\u56fe\u50cf\u7684\u7eb9\u7406\u53d8\u5f97\u8d8a\u6765\u8d8a\u597d\uff0c\u751a\u81f3\u6211\u4eec\u4ed4\u7ec6\u770b\u7b2c\u4e09\u5e45\u56fe\uff0c\u4e5f\u80fd\u53d1\u73b0\u632f\u94c3\u73b0\u8c61\u7684\u7eb9\u7406\uff0c\u8bfe\u672c\u662f\u8fd9\u4e48\u8bc4\u4ef7\u632f\u94c3\u73b0\u8c61\u548c ILPF \u7684\u3002 \u8fd9\u79cd\u632f\u94c3\u73b0\u8c61\u662f\u7406\u60f3\u6ee4\u6ce2\u5668\u7684\u4e00\u79cd\u7279\u6027\uff0c\u4ece\u8fd9\u4e2a\u4f8b\u5b50\u6211\u4eec\u53ef\u4ee5\u6e05\u695a\u5730\u770b\u5230\uff0c\u7406\u60f3\u4f4e\u901a\u6ee4\u6ce2\u5668\u5e76\u4e0d\u662f\u975e\u5e38\u5b9e\u7528\u3002\u7136\u800c\uff0c\u4f5c\u4e3a\u6ee4\u6ce2\u6982\u5ff5\u53d1\u5c55\u7684\u4e00\u90e8\u5206\uff0c\u7814\u7a76\u8fd9\u79cd\u6ee4\u6ce2\u5668\u7684\u7279\u6027\u975e\u5e38\u6709\u7528\u3002","title":"\u632f\u94c3\u73b0\u8c61"},{"location":"imageprocess/ilpf/#_4","text":"# \u7ed8\u5236\u7a7a\u95f4\u57df\u8868\u793a\u56fe\u548c\u6c34\u5e73\u7ebf\u7070\u5ea6\u5256\u9762\u56fe for d in d_list : fre_mask = getIdealMask (( 688 , 688 ), d , \"lpf\" ) spa_mask = frequencyToSpatial ( fre_mask ) X = [ i for i in range ( spa_mask . shape [ 0 ])] Y = spa_mask [ spa_mask . shape [ 0 ] // 2 ] plt . figure ( figsize = ( 8 , 4 )) ax1 = plt . subplot ( 121 ) ax2 = plt . subplot ( 122 ) ax1 . set_title ( f \"Spatial Img with $D_0 = { d } $\" ) ax2 . set_title ( f \"Grayscale with $D_0 = { d } $\" ) ax1 . imshow ( spa_mask , cmap = \"gray\" ) ax2 . plot ( X , Y ) ax2 . spines [ 'left' ] . set_color ( 'none' ) ax2 . spines [ 'top' ] . set_color ( 'none' ) ax2 . spines [ 'right' ] . set_color ( 'none' ) ax2 . set_yticks ([]) ax2 . set_yticklabels ([]) \u5206\u522b\u5bf9\u5e94\u4e86\u4e0a\u9762\u7684\u9608\u503c\uff0c\u89c2\u5bdf\u5176\u6ee4\u6ce2\u5668\u7684\u7a7a\u95f4\u4e0e\u8868\u793a\uff0c\u5728 D_0 D_0 \u8f83\u5c0f\u7684\u65f6\u5019\u6709\u5f88\u660e\u663e\u7684\u6ce2\u52a8\u51fd\u6570\u5f62\u72b6\u3002 ILPF \u7684\u6a21\u7cca\u548c\u632f\u94c3\u7279\u6027\u53ef\u7528\u5377\u79ef\u5b9a\u7406\u6765\u89e3\u91ca\u3002\u7531\u4e8e ILPF \u5728\u9891\u7387\u57df\u7684\u5256\u9762\u56fe\u7c7b\u4f3c\u4e8e\u76d2\u72b6\u6ee4\u6ce2\u5668\uff0c\u56e0\u6b64\u53ef\u4ee5\u9884\u6599\u76f8\u5e94\u7a7a\u95f4\u6ee4\u6ce2\u5668\u5177\u6709 sinc \u51fd\u6570\u5f62\u72b6\u3002\u7a7a\u95f4\u57df\u6ee4\u6ce2\u53ef\u901a\u8fc7 h(x,y) h(x,y) \u4e8e\u56fe\u50cf\u5377\u79ef\u6765\u5b9e\u73b0\u3002\u8bb2\u56fe\u50cf\u4e2d\u7684\u6bcf\u4e2a\u50cf\u7d20\u60f3\u8c61\u4e3a\u4e00\u4e2a\u79bb\u6563\u51b2\u51fb\uff0c\u5b83\u7684\u5f3a\u5ea6\u4e0e\u6240\u5728\u4f4d\u7f6e\u7684\u7070\u5ea6\u6210\u6b63\u6bd4\u3002\u4e00\u4e2a sinc \u51fd\u6570\u4e0e\u4e00\u4e2a\u51b2\u6fc0\u5377\u79ef\u5c31\u662f\u5728\u51b2\u6fc0\u5904\u590d\u5236\u8fd9\u4e2a sinc \u51fd\u6570\u3002 sinc \u51fd\u6570\u7684\u4e2d\u5fc3\u6ce2\u74e3\u662f\u5f15\u8d77\u6a21\u7cca\u7684\u4e3b\u56e0\uff0c\u800c\u5916\u4fa7\u8f83\u5c0f\u7684\u6ce2\u74e3\u662f\u9020\u6210\u632f\u94c3\u7684\u4e3b\u8981\u539f\u56e0\u3002sinc \u51fd\u6570\u201c\u5c55\u5f00\u5ea6\u201d\u4e0e H(u,v) H(u,v) \u534a\u5f84\u6210\u53cd\u6bd4\uff0c\u6240\u4ee5 D_0 D_0 \u8d8a\u5927\uff0c\u7a7a\u95f4 sinc \u51fd\u6570\u5c31\u8d8b\u8fd1\u4e8e\u4e00\u4e2a\u5377\u79ef\u65f6\u4e0d\u4f1a\u5bfc\u81f4\u6a21\u7cca\u4f46\u4e5f\u4e0d\u4f1a\u4ea7\u751f\u632f\u94c3\u7684\u51b2\u6fc0 \u642c\u8fd0 DJ \u7684\u5bc6\u7801\u5b66\u89c6\u9891\u6765\u505a\u6d4b\u8bd5","title":"\u632f\u94c3\u73b0\u8c61\u7684\u4e00\u4e9b\u89c1\u89e3"},{"location":"intro/htc/","text":"\u8fd9\u7bc7\u6587\u7ae0\u5c06\u4e3b\u8981\u53d9\u8ff0\u4e00\u4e9b\u5728\u9875\u9762\u7f16\u8f91\u8fc7\u7a0b\u4e2d\u9700\u6ce8\u610f\u7684\u70b9\uff0c\u5e0c\u671b\u60a8\u5728\u64b0\u7a3f\u6216\u4fee\u6b63 Wiki \u9875\u9762\u4e4b\u524d\uff0c\u4ed4\u7ec6\u9605\u8bfb\uff0c\u4ee5\u5e2e\u52a9\u60a8\u5b8c\u6210\u66f4\u9ad8\u8d28\u91cf\u7684\u5185\u5bb9\u3002 \u8d21\u732e\u6587\u6863\u8981\u6c42 \u00b6 \u6587\u4ef6\u540d\u5c0f\u5199\uff0c\u4ee5 - \u5206\u5272 \u3002 \u8bf7\u786e\u4fdd\u6587\u6863\u4e2d\u5f15\u7528\u7684\u56fe\u7247\u4e0d\u4f1a\u89e6\u53d1\u67d0\u4e9b\u7f51\u7ad9\u7684\u9632\u76d7\u94fe\uff0c\u82e5\u4f1a\u89e6\u53d1\uff0c\u5efa\u8bae\u5c06\u56fe\u7247\u8f6c\u5b58\u5230\u672c\u5e93\u5185\u5bf9\u5e94\u7684 images \u6587\u4ef6\u5939\u4e2d\uff0c\u547d\u540d\u65b9\u5f0f\u4e3a MD \u6587\u6863\u540d\u79f0 + \u7f16\u53f7 \u7684\u5f62\u5f0f\uff0c\u5f15\u7528\u65b9\u5f0f\u4e3a ![](./image/xx.jpg) \u3002 \u786e\u4fdd\u6587\u6863\u4e2d\u5f15\u7528\u94fe\u63a5\u7684\u7a33\u5b9a\u6027\u3002 \u7ad9\u5185\u94fe\u63a5\u8bf7\u4f7f\u7528\u76f8\u5bf9\u8def\u5f84\u94fe\u63a5\u5bf9\u5e94\u7684 .md \u6587\u4ef6\u3002 \u6587\u6863\u4e2d\u6d89\u53ca\u7684\u4ee3\u7801\uff0c\u82e5\u4ee3\u7801\u957f\u5ea6\u8f83\u957f\uff0c\u91c7\u7528\u884c\u5185\u6298\u53e0\u4ee3\u7801\u5199\u6cd5\uff0c\u683c\u5f0f\u5982\u4e0b ??? \u6807\u9898 \u5185\u5bb9 \u6548\u679c Code import numpy as np import pandas as pd","title":"\u5982\u4f55\u53c2\u4e0e"},{"location":"intro/htc/#_1","text":"\u6587\u4ef6\u540d\u5c0f\u5199\uff0c\u4ee5 - \u5206\u5272 \u3002 \u8bf7\u786e\u4fdd\u6587\u6863\u4e2d\u5f15\u7528\u7684\u56fe\u7247\u4e0d\u4f1a\u89e6\u53d1\u67d0\u4e9b\u7f51\u7ad9\u7684\u9632\u76d7\u94fe\uff0c\u82e5\u4f1a\u89e6\u53d1\uff0c\u5efa\u8bae\u5c06\u56fe\u7247\u8f6c\u5b58\u5230\u672c\u5e93\u5185\u5bf9\u5e94\u7684 images \u6587\u4ef6\u5939\u4e2d\uff0c\u547d\u540d\u65b9\u5f0f\u4e3a MD \u6587\u6863\u540d\u79f0 + \u7f16\u53f7 \u7684\u5f62\u5f0f\uff0c\u5f15\u7528\u65b9\u5f0f\u4e3a ![](./image/xx.jpg) \u3002 \u786e\u4fdd\u6587\u6863\u4e2d\u5f15\u7528\u94fe\u63a5\u7684\u7a33\u5b9a\u6027\u3002 \u7ad9\u5185\u94fe\u63a5\u8bf7\u4f7f\u7528\u76f8\u5bf9\u8def\u5f84\u94fe\u63a5\u5bf9\u5e94\u7684 .md \u6587\u4ef6\u3002 \u6587\u6863\u4e2d\u6d89\u53ca\u7684\u4ee3\u7801\uff0c\u82e5\u4ee3\u7801\u957f\u5ea6\u8f83\u957f\uff0c\u91c7\u7528\u884c\u5185\u6298\u53e0\u4ee3\u7801\u5199\u6cd5\uff0c\u683c\u5f0f\u5982\u4e0b ??? \u6807\u9898 \u5185\u5bb9 \u6548\u679c Code import numpy as np import pandas as pd","title":"\u8d21\u732e\u6587\u6863\u8981\u6c42"}]}